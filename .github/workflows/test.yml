name: Run Tests

on: [ pull_request ]

jobs:
  tests:
    # Name
    name: WordPress ${{ matrix.wp-versions }} on PHP ${{ matrix.php-versions }}

    # Virtual Environment to use
    # @see: https://github.com/actions/virtual-environments
    runs-on: ubuntu-20.04

    # Environment Variables
    # Accessible by using ${{ env.NAME }}
    # Use ${{ secrets.NAME }} to include any GitHub Secrets in ${{ env.NAME }}
    env:
      ROOT_DIR: /home/runner/work/convertkit-wordpress/convertkit-wordpress/wordpress
      PLUGIN_DIR: /home/runner/work/convertkit-wordpress/convertkit-wordpress/wordpress/wp-content/plugins/convertkit
      DB_NAME: test
      DB_USER: root
      DB_PASS: root
      DB_HOST: localhost
      INSTALL_PLUGINS: "contact-form-7 disable-welcome-messages-and-tips woocommerce" # Don't include this repository's Plugin here.
      CONVERTKIT_API_KEY: ${{ secrets.CONVERTKIT_API_KEY }} # ConvertKit API Key, stored in the repository's Settings > Secrets
      CONVERTKIT_API_SECRET: ${{ secrets.CONVERTKIT_API_SECRET }} # ConvertKit API Secret, stored in the repository's Settings > Secrets

    # Defines the WordPress and PHP Versions matrix to run tests on
    # WooCommerce 5.9.0 requires WordPress 5.6 or greater, so we do not test on earlier versions
    # Make sure to use older WordPress versions that have the X3 SSL fix: https://core.trac.wordpress.org/ticket/54207
    strategy:
      matrix:
        wp-versions: [ '5.8.2' ] #['5.0', '5.1', '5.2', '5.3', '5.4', '5.5', '5.6', '5.7', '5.8']
        php-versions: [ '7.3', '7.4', '8.0' ] #['7.2', '7.3', '7.4', '8.0', '8.1']

    # Steps to install, configure and run tests
    steps:
      - name: Start MySQL
        run: sudo systemctl start mysql.service

      - name: Create MySQL Database
        run: |
          mysql -e 'CREATE DATABASE test;' -u${{ env.DB_USER }} -p${{ env.DB_PASS }}
          mysql -e 'SHOW DATABASES;' -u${{ env.DB_USER }} -p${{ env.DB_PASS }}

      - name: Permit MySQL Password Auth for MySQL 8.0
        run: mysql -e "ALTER USER '${{ env.DB_USER }}'@'${{ env.DB_HOST }}' IDENTIFIED WITH mysql_native_password BY '${{ env.DB_PASS }}';"  -u${{ env.DB_USER }} -p${{ env.DB_PASS }} 

      - name: Download WordPress
        run: wget https://wordpress.org/wordpress-${{ matrix.wp-versions }}.tar.gz

      - name: Extract WordPress
        run: tar xfz wordpress-${{ matrix.wp-versions }}.tar.gz

      # Checkout (copy) this repository's Plugin to this VM
      - name: Checkout Plugin
        uses: actions/checkout@v2
        with:
          path: ${{ env.PLUGIN_DIR }}

      - name: Install WP-CLI
        run: |
          curl -O https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar
          chmod +x wp-cli.phar
          sudo mv wp-cli.phar /usr/local/bin/wp-cli

      - name: Setup wp-config.php
        working-directory: ${{ env.ROOT_DIR }}
        run: wp-cli config create --dbname=${{ env.DB_NAME }} --dbuser=${{ env.DB_USER }} --dbpass=${{ env.DB_PASS }} --dbhost=${{ env.DB_HOST }} --locale=en_DB

      - name: Install WordPress
        working-directory: ${{ env.ROOT_DIR }}
        run: wp-cli core install --url=127.0.0.1 --title=ConvertKit --admin_user=admin --admin_password=password --admin_email=wordpress@convertkit.local

      - name: Install and Activate Free Third Party WordPress Plugins
        working-directory: ${{ env.ROOT_DIR }}
        run: wp-cli plugin install ${{ env.INSTALL_PLUGINS }} --activate

      # These should be stored as a separated list of URLs in the repository Settings > Secrets > Repository Secret > CONVERTKIT_PAID_PLUGIN_URLS
      # We cannot include the URLs in this file, as they're not Plugins we are permitted to distribute
      - name: Install and Activate Paid Third Party WordPress Plugins
        working-directory: ${{ env.ROOT_DIR }}
        run: wp-cli plugin install ${{ secrets.CONVERTKIT_PAID_PLUGIN_URLS }} --activate
      
      # WP_DEBUG = true is required so any WordPress / PHP errors are output and caught by tests
      # FS_METHOD = direct is required for WP_Filesystem to operate without suppressed PHP fopen() errors that trip up tests
      - name: Enable WP_DEBUG
        working-directory: ${{ env.ROOT_DIR }}
        run: |
          wp-cli config set WP_DEBUG true --raw
          wp-cli config set FS_METHOD direct

      - name: Install PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          coverage: xdebug

      - name: Copy nginx configuration file
        run: sudo cp ${{ env.PLUGIN_DIR }}/tests/nginx/php-${{ matrix.php-versions }}.conf /etc/nginx/conf.d/php-${{ matrix.php-versions }}.conf

      - name: Test nginx
        run: sudo nginx -t

      - name: Start nginx
        run: sudo systemctl start nginx.service
        
      - name: Install chromedriver
        uses: nanasess/setup-chromedriver@master

      - name: Start chromedriver
        run: |
          export DISPLAY=:99
          chromedriver --url-base=/wd/hub &
          sudo Xvfb -ac :99 -screen 0 1280x1024x24 > /dev/null 2>&1 & # optional

      # Write any secrets, such as API keys, to the .env.dist.testing file now
      # Make sure your committed .env.dist.testing file ends with a newline
      - name: Define GitHub Secrets in .env.dist.testing
        uses: DamianReeves/write-file-action@v1.0
        with:
          path: ${{ env.PLUGIN_DIR }}/.env.dist.testing
          contents: |

            CONVERTKIT_API_KEY=${{ env.CONVERTKIT_API_KEY }}
            CONVERTKIT_API_SECRET=${{ env.CONVERTKIT_API_SECRET }}
          write-mode: append

      - name: Run Composer
        working-directory: ${{ env.PLUGIN_DIR }}
        run: composer update

      - name: Build PHP Autoloader
        working-directory: ${{ env.PLUGIN_DIR }}
        run: composer dump-autoload

      - name: Set chmod for Plugin Directory
        run: sudo chmod g+w ${{ env.PLUGIN_DIR }}

      - name: Set chown for Plugin Directory
        run: sudo chown www-data:www-data ${{ env.PLUGIN_DIR }}

      - name: Run WordPress Coding Standards Tests
        working-directory: ${{ env.PLUGIN_DIR }}
        run: php vendor/bin/phpcs ./ -v

      - name: Build Tests
        working-directory: ${{ env.PLUGIN_DIR }}
        run: php vendor/bin/codecept build

      - name: Run Acceptance Tests
        working-directory: ${{ env.PLUGIN_DIR }}
        run: php vendor/bin/codecept run acceptance PageShortcodeCustomContentCest

      - name: Upload Test Results to Artifact
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: test-results
          path: /home/runner/work/convertkit-wordpress/convertkit-wordpress/wordpress/wp-content/plugins/convertkit/tests/_output/

      - name: Upload Plugin Log File to Artifact
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: log
          path: /home/runner/work/convertkit-wordpress/convertkit-wordpress/wordpress/wp-content/plugins/convertkit/log.txt